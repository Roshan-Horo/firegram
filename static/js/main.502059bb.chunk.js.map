{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","event","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","e","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.502059bb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>My Photos Gallery</h2>\n      <p>Upload some of your fav photos</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDb2aBlDd9pGJi84n2ighxj771kdQu46fc\",\r\n    authDomain: \"firegram-3de1b.firebaseapp.com\",\r\n    databaseURL: \"https://firegram-3de1b.firebaseio.com\",\r\n    projectId: \"firegram-3de1b\",\r\n    storageBucket: \"firegram-3de1b.appspot.com\",\r\n    messagingSenderId: \"863364493476\",\r\n    appId: \"1:863364493476:web:881e7769d1f60ff1b8f631\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export {projectStorage, projectFirestore, timestamp};","import { useState, useEffect} from 'react';\r\nimport {projectStorage, projectFirestore, timestamp } from '../firebase/config';\r\n\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect( () => {\r\n        // references \r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n           setError(err);\r\n        }, async() => {\r\n\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({url, createdAt});\r\n            setUrl(url);\r\n        })\r\n    },[file]);\r\n    \r\n    return { progress, url, error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n    const {url, progress} = useStorage(file);\r\n    \r\n    useEffect( () => {\r\n        if(url){\r\n            setFile(null);\r\n        }\r\n    },[url, setFile])\r\n\r\n    return (\r\n        <motion.div className=\"progress-bar\" \r\n         initial={{width: 0}}\r\n         animate={{width: progress + '%'}}\r\n        \r\n        ></motion.div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = [\"image/png\", \"image/jpeg\"];\r\n    \r\n    const changeHandler = (event) => {\r\n        let selected = event.target.files[0];\r\n        \r\n        if(selected && types.includes(selected.type) ){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('please select an image file (png or jpeg) ')\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    return(\r\n        <form>\r\n         <label>\r\n           <input type=\"file\" onChange={changeHandler} />\r\n           <span>+</span>\r\n         </label>\r\n          <div className=\"output\">\r\n           {error && <div className=\"error\">{error}</div>}\r\n           {file && <div> {file.name} </div>}\r\n           {file && <ProgressBar file={file} setFile={setFile} /> }\r\n          </div>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default UploadForm;","import {useState, useEffect} from 'react';\r\nimport {projectFirestore} from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect( () => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot( (snap) => {\r\n            let documents = [];\r\n            snap.forEach(doc => {\r\n                documents.push({...doc.data(), id: doc.id})\r\n            });\r\n            setDocs(documents)\r\n            });\r\n\r\n           return () => unsub();\r\n\r\n    },[collection])\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const {docs} = useFirestore('images');\r\n    console.log(docs)\r\n\r\n    return(\r\n       <div className=\"img-grid\">\r\n        {docs && docs.map(doc => (\r\n            <motion.div className=\"img-wrap\" key={doc.id}\r\n             layout\r\n             whileHover={{opacity: 1}}\r\n             onClick={ () => setSelectedImg(doc.url)}\r\n            >\r\n              <motion.img src={doc.url} alt=\"uploaded img\" \r\n               initial={{opacity: 0}}\r\n               animate={{opacity: 1}}\r\n               transition={{delay: 1}}\r\n              />\r\n            </motion.div>\r\n        ))}\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\n    const handleEvent = (e) => {\r\n        if(e.target.classList.contains('backdrop'))\r\n         setSelectedImg(null);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={handleEvent}\r\n         initial={{opacity: 0}}\r\n         animate={{opacity: 1}}\r\n        >\r\n          <motion.img src={selectedImg} alt=\"enlarged img\" \r\n           initial={{y: \"-100vh\"}}\r\n           animate={{y: 0}}\r\n          />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid  setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}